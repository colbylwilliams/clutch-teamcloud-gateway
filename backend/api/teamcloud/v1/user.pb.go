//
//TeamCloud
//
//API for working with a TeamCloud instance.
//
//The version of the OpenAPI document: v1
//
//Contact: colbyw@microsoft.com
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: teamcloud/v1/user.proto

package teamcloudv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User_UserTypeEnum int32

const (
	User_USER    User_UserTypeEnum = 0
	User_GROUP   User_UserTypeEnum = 1
	User_SYSTEM  User_UserTypeEnum = 2
	User_SERVICE User_UserTypeEnum = 3
)

// Enum value maps for User_UserTypeEnum.
var (
	User_UserTypeEnum_name = map[int32]string{
		0: "USER",
		1: "GROUP",
		2: "SYSTEM",
		3: "SERVICE",
	}
	User_UserTypeEnum_value = map[string]int32{
		"USER":    0,
		"GROUP":   1,
		"SYSTEM":  2,
		"SERVICE": 3,
	}
)

func (x User_UserTypeEnum) Enum() *User_UserTypeEnum {
	p := new(User_UserTypeEnum)
	*p = x
	return p
}

func (x User_UserTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_UserTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_user_proto_enumTypes[0].Descriptor()
}

func (User_UserTypeEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_user_proto_enumTypes[0]
}

func (x User_UserTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_UserTypeEnum.Descriptor instead.
func (User_UserTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_user_proto_rawDescGZIP(), []int{0, 0}
}

type User_RoleEnum int32

const (
	User_NONE    User_RoleEnum = 0
	User_MEMBER  User_RoleEnum = 1
	User_ADMIN   User_RoleEnum = 2
	User_OWNER   User_RoleEnum = 3
	User_ADAPTER User_RoleEnum = 4
)

// Enum value maps for User_RoleEnum.
var (
	User_RoleEnum_name = map[int32]string{
		0: "NONE",
		1: "MEMBER",
		2: "ADMIN",
		3: "OWNER",
		4: "ADAPTER",
	}
	User_RoleEnum_value = map[string]int32{
		"NONE":    0,
		"MEMBER":  1,
		"ADMIN":   2,
		"OWNER":   3,
		"ADAPTER": 4,
	}
)

func (x User_RoleEnum) Enum() *User_RoleEnum {
	p := new(User_RoleEnum)
	*p = x
	return p
}

func (x User_RoleEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_RoleEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_user_proto_enumTypes[1].Descriptor()
}

func (User_RoleEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_user_proto_enumTypes[1]
}

func (x User_RoleEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_RoleEnum.Descriptor instead.
func (User_RoleEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_user_proto_rawDescGZIP(), []int{0, 1}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization        string                   `protobuf:"bytes,105180469,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationName    string                   `protobuf:"bytes,218494373,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	DisplayName         *string                  `protobuf:"bytes,103536240,opt,name=displayName,proto3,oneof" json:"displayName,omitempty"`
	LoginName           *string                  `protobuf:"bytes,108854895,opt,name=loginName,proto3,oneof" json:"loginName,omitempty"`
	MailAddress         *string                  `protobuf:"bytes,149642693,opt,name=mailAddress,proto3,oneof" json:"mailAddress,omitempty"`
	UserType            User_UserTypeEnum        `protobuf:"varint,266464859,opt,name=userType,proto3,enum=colbylwilliams.teamcloud.v1.User_UserTypeEnum" json:"userType,omitempty"`
	Role                User_RoleEnum            `protobuf:"varint,3506294,opt,name=role,proto3,enum=colbylwilliams.teamcloud.v1.User_RoleEnum" json:"role,omitempty"`
	ProjectMemberships  []*ProjectMembership     `protobuf:"bytes,456726151,rep,name=projectMemberships,proto3" json:"projectMemberships,omitempty"`
	AlternateIdentities *UserAlternateIdentities `protobuf:"bytes,140596727,opt,name=alternateIdentities,proto3" json:"alternateIdentities,omitempty"`
	Properties          map[string]string        `protobuf:"bytes,389182158,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Id                  string                   `protobuf:"bytes,3355,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *User) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *User) GetLoginName() string {
	if x != nil && x.LoginName != nil {
		return *x.LoginName
	}
	return ""
}

func (x *User) GetMailAddress() string {
	if x != nil && x.MailAddress != nil {
		return *x.MailAddress
	}
	return ""
}

func (x *User) GetUserType() User_UserTypeEnum {
	if x != nil {
		return x.UserType
	}
	return User_USER
}

func (x *User) GetRole() User_RoleEnum {
	if x != nil {
		return x.Role
	}
	return User_NONE
}

func (x *User) GetProjectMemberships() []*ProjectMembership {
	if x != nil {
		return x.ProjectMemberships
	}
	return nil
}

func (x *User) GetAlternateIdentities() *UserAlternateIdentities {
	if x != nil {
		return x.AlternateIdentities
	}
	return nil
}

func (x *User) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_teamcloud_v1_user_proto protoreflect.FileDescriptor

var file_teamcloud_v1_user_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6c, 0x62, 0x79,
	0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x74,
	0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x07, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xb5, 0xda, 0x93, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x10, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0xa5, 0xeb, 0x97, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xf0, 0xac, 0xaf, 0x31, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0xef, 0xfc, 0xf3, 0x33, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0b, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xc5, 0xbb, 0xad, 0x47, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0xdb, 0xdc, 0x87, 0x7f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6c, 0x62,
	0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0xf6, 0x80, 0xd6, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c,
	0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x87, 0xad, 0xe4,
	0xd9, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77,
	0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x69, 0x0a, 0x13, 0x61, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0xf7, 0xab, 0x85, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6c,
	0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x13, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0xce, 0xe5, 0xc9, 0xb9, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74,
	0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x0f, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x9b, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x3d, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04,
	0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x03, 0x22, 0x43, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x44, 0x41, 0x50, 0x54, 0x45, 0x52, 0x10, 0x04, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x59, 0x5a,
	0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6c, 0x62,
	0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63,
	0x68, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65, 0x61,
	0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x76, 0x31, 0x50, 0x00, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamcloud_v1_user_proto_rawDescOnce sync.Once
	file_teamcloud_v1_user_proto_rawDescData = file_teamcloud_v1_user_proto_rawDesc
)

func file_teamcloud_v1_user_proto_rawDescGZIP() []byte {
	file_teamcloud_v1_user_proto_rawDescOnce.Do(func() {
		file_teamcloud_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamcloud_v1_user_proto_rawDescData)
	})
	return file_teamcloud_v1_user_proto_rawDescData
}

var file_teamcloud_v1_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_teamcloud_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_teamcloud_v1_user_proto_goTypes = []interface{}{
	(User_UserTypeEnum)(0),          // 0: colbylwilliams.teamcloud.v1.User.UserTypeEnum
	(User_RoleEnum)(0),              // 1: colbylwilliams.teamcloud.v1.User.RoleEnum
	(*User)(nil),                    // 2: colbylwilliams.teamcloud.v1.User
	nil,                             // 3: colbylwilliams.teamcloud.v1.User.PropertiesEntry
	(*ProjectMembership)(nil),       // 4: colbylwilliams.teamcloud.v1.ProjectMembership
	(*UserAlternateIdentities)(nil), // 5: colbylwilliams.teamcloud.v1.UserAlternateIdentities
}
var file_teamcloud_v1_user_proto_depIdxs = []int32{
	0, // 0: colbylwilliams.teamcloud.v1.User.userType:type_name -> colbylwilliams.teamcloud.v1.User.UserTypeEnum
	1, // 1: colbylwilliams.teamcloud.v1.User.role:type_name -> colbylwilliams.teamcloud.v1.User.RoleEnum
	4, // 2: colbylwilliams.teamcloud.v1.User.projectMemberships:type_name -> colbylwilliams.teamcloud.v1.ProjectMembership
	5, // 3: colbylwilliams.teamcloud.v1.User.alternateIdentities:type_name -> colbylwilliams.teamcloud.v1.UserAlternateIdentities
	3, // 4: colbylwilliams.teamcloud.v1.User.properties:type_name -> colbylwilliams.teamcloud.v1.User.PropertiesEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_teamcloud_v1_user_proto_init() }
func file_teamcloud_v1_user_proto_init() {
	if File_teamcloud_v1_user_proto != nil {
		return
	}
	file_teamcloud_v1_project_membership_proto_init()
	file_teamcloud_v1_user_alternate_identities_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_teamcloud_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamcloud_v1_user_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamcloud_v1_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamcloud_v1_user_proto_goTypes,
		DependencyIndexes: file_teamcloud_v1_user_proto_depIdxs,
		EnumInfos:         file_teamcloud_v1_user_proto_enumTypes,
		MessageInfos:      file_teamcloud_v1_user_proto_msgTypes,
	}.Build()
	File_teamcloud_v1_user_proto = out.File
	file_teamcloud_v1_user_proto_rawDesc = nil
	file_teamcloud_v1_user_proto_goTypes = nil
	file_teamcloud_v1_user_proto_depIdxs = nil
}
