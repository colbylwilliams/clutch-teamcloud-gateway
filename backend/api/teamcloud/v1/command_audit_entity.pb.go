//
//TeamCloud
//
//API for working with a TeamCloud instance.
//
//The version of the OpenAPI document: v1
//
//Contact: colbyw@microsoft.com
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: teamcloud/v1/command_audit_entity.proto

package teamcloudv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandAuditEntity_RuntimeStatusEnum int32

const (
	CommandAuditEntity_RUNNING        CommandAuditEntity_RuntimeStatusEnum = 0
	CommandAuditEntity_COMPLETED      CommandAuditEntity_RuntimeStatusEnum = 1
	CommandAuditEntity_CONTINUEDASNEW CommandAuditEntity_RuntimeStatusEnum = 2
	CommandAuditEntity_FAILED         CommandAuditEntity_RuntimeStatusEnum = 3
	CommandAuditEntity_CANCELED       CommandAuditEntity_RuntimeStatusEnum = 4
	CommandAuditEntity_TERMINATED     CommandAuditEntity_RuntimeStatusEnum = 5
	CommandAuditEntity_PENDING        CommandAuditEntity_RuntimeStatusEnum = 6
	CommandAuditEntity_UNKNOWN        CommandAuditEntity_RuntimeStatusEnum = 7
)

// Enum value maps for CommandAuditEntity_RuntimeStatusEnum.
var (
	CommandAuditEntity_RuntimeStatusEnum_name = map[int32]string{
		0: "RUNNING",
		1: "COMPLETED",
		2: "CONTINUEDASNEW",
		3: "FAILED",
		4: "CANCELED",
		5: "TERMINATED",
		6: "PENDING",
		7: "UNKNOWN",
	}
	CommandAuditEntity_RuntimeStatusEnum_value = map[string]int32{
		"RUNNING":        0,
		"COMPLETED":      1,
		"CONTINUEDASNEW": 2,
		"FAILED":         3,
		"CANCELED":       4,
		"TERMINATED":     5,
		"PENDING":        6,
		"UNKNOWN":        7,
	}
)

func (x CommandAuditEntity_RuntimeStatusEnum) Enum() *CommandAuditEntity_RuntimeStatusEnum {
	p := new(CommandAuditEntity_RuntimeStatusEnum)
	*p = x
	return p
}

func (x CommandAuditEntity_RuntimeStatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandAuditEntity_RuntimeStatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_command_audit_entity_proto_enumTypes[0].Descriptor()
}

func (CommandAuditEntity_RuntimeStatusEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_command_audit_entity_proto_enumTypes[0]
}

func (x CommandAuditEntity_RuntimeStatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandAuditEntity_RuntimeStatusEnum.Descriptor instead.
func (CommandAuditEntity_RuntimeStatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_command_audit_entity_proto_rawDescGZIP(), []int{0, 0}
}

type CommandAuditEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartitionKey   *string                              `protobuf:"bytes,222376725,opt,name=partitionKey,proto3,oneof" json:"partitionKey,omitempty"`
	RowKey         *string                              `protobuf:"bytes,388241884,opt,name=rowKey,proto3,oneof" json:"rowKey,omitempty"`
	Timestamp      *string                              `protobuf:"bytes,55126294,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	ETag           *string                              `protobuf:"bytes,3092725,opt,name=eTag,proto3,oneof" json:"eTag,omitempty"`
	CommandId      *string                              `protobuf:"bytes,424984124,opt,name=commandId,proto3,oneof" json:"commandId,omitempty"`
	OrganizationId *string                              `protobuf:"bytes,390171219,opt,name=organizationId,proto3,oneof" json:"organizationId,omitempty"`
	CommandJson    *string                              `protobuf:"bytes,387800367,opt,name=commandJson,proto3,oneof" json:"commandJson,omitempty"`
	ResultJson     *string                              `protobuf:"bytes,35269980,opt,name=resultJson,proto3,oneof" json:"resultJson,omitempty"`
	ProjectId      *string                              `protobuf:"bytes,357961197,opt,name=projectId,proto3,oneof" json:"projectId,omitempty"`
	UserId         *string                              `protobuf:"bytes,299159995,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	ParentId       *string                              `protobuf:"bytes,101420903,opt,name=parentId,proto3,oneof" json:"parentId,omitempty"`
	Command        *string                              `protobuf:"bytes,413523788,opt,name=command,proto3,oneof" json:"command,omitempty"`
	ComponentTask  *string                              `protobuf:"bytes,95813669,opt,name=componentTask,proto3,oneof" json:"componentTask,omitempty"`
	RuntimeStatus  CommandAuditEntity_RuntimeStatusEnum `protobuf:"varint,468760086,opt,name=runtimeStatus,proto3,enum=colbylwilliams.teamcloud.v1.CommandAuditEntity_RuntimeStatusEnum" json:"runtimeStatus,omitempty"`
	CustomStatus   *string                              `protobuf:"bytes,387264195,opt,name=customStatus,proto3,oneof" json:"customStatus,omitempty"`
	Errors         *string                              `protobuf:"bytes,220893335,opt,name=errors,proto3,oneof" json:"errors,omitempty"`
	Created        *string                              `protobuf:"bytes,491683561,opt,name=created,proto3,oneof" json:"created,omitempty"`
	Updated        *string                              `protobuf:"bytes,234430277,opt,name=updated,proto3,oneof" json:"updated,omitempty"`
}

func (x *CommandAuditEntity) Reset() {
	*x = CommandAuditEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_command_audit_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandAuditEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandAuditEntity) ProtoMessage() {}

func (x *CommandAuditEntity) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_command_audit_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandAuditEntity.ProtoReflect.Descriptor instead.
func (*CommandAuditEntity) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_command_audit_entity_proto_rawDescGZIP(), []int{0}
}

func (x *CommandAuditEntity) GetPartitionKey() string {
	if x != nil && x.PartitionKey != nil {
		return *x.PartitionKey
	}
	return ""
}

func (x *CommandAuditEntity) GetRowKey() string {
	if x != nil && x.RowKey != nil {
		return *x.RowKey
	}
	return ""
}

func (x *CommandAuditEntity) GetTimestamp() string {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return ""
}

func (x *CommandAuditEntity) GetETag() string {
	if x != nil && x.ETag != nil {
		return *x.ETag
	}
	return ""
}

func (x *CommandAuditEntity) GetCommandId() string {
	if x != nil && x.CommandId != nil {
		return *x.CommandId
	}
	return ""
}

func (x *CommandAuditEntity) GetOrganizationId() string {
	if x != nil && x.OrganizationId != nil {
		return *x.OrganizationId
	}
	return ""
}

func (x *CommandAuditEntity) GetCommandJson() string {
	if x != nil && x.CommandJson != nil {
		return *x.CommandJson
	}
	return ""
}

func (x *CommandAuditEntity) GetResultJson() string {
	if x != nil && x.ResultJson != nil {
		return *x.ResultJson
	}
	return ""
}

func (x *CommandAuditEntity) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

func (x *CommandAuditEntity) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *CommandAuditEntity) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

func (x *CommandAuditEntity) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *CommandAuditEntity) GetComponentTask() string {
	if x != nil && x.ComponentTask != nil {
		return *x.ComponentTask
	}
	return ""
}

func (x *CommandAuditEntity) GetRuntimeStatus() CommandAuditEntity_RuntimeStatusEnum {
	if x != nil {
		return x.RuntimeStatus
	}
	return CommandAuditEntity_RUNNING
}

func (x *CommandAuditEntity) GetCustomStatus() string {
	if x != nil && x.CustomStatus != nil {
		return *x.CustomStatus
	}
	return ""
}

func (x *CommandAuditEntity) GetErrors() string {
	if x != nil && x.Errors != nil {
		return *x.Errors
	}
	return ""
}

func (x *CommandAuditEntity) GetCreated() string {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return ""
}

func (x *CommandAuditEntity) GetUpdated() string {
	if x != nil && x.Updated != nil {
		return *x.Updated
	}
	return ""
}

var File_teamcloud_v1_command_audit_entity_proto protoreflect.FileDescriptor

var file_teamcloud_v1_command_audit_entity_proto_rawDesc = []byte{
	0x0a, 0x27, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6c, 0x62, 0x79,
	0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x22, 0xff, 0x08, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x95, 0xe6,
	0x84, 0x6a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x6f, 0x77,
	0x4b, 0x65, 0x79, 0x18, 0xdc, 0xb3, 0x90, 0xb9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x06, 0x72, 0x6f, 0x77, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x96, 0xd2, 0xa4, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x04, 0x65, 0x54, 0x61, 0x67, 0x18, 0xf5, 0xe1, 0xbc, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x04, 0x65, 0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0xbc, 0xfc, 0xd2, 0xca, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0xd3, 0x94, 0x86, 0xba, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a,
	0x73, 0x6f, 0x6e, 0x18, 0xaf, 0xba, 0xf5, 0xb8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0xdc, 0xda,
	0xe8, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x4a, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0xed, 0x9b, 0xd8, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0xbb, 0xa3, 0xd3, 0x8e, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0xe7, 0x9e, 0xae, 0x30,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0xcc,
	0xbe, 0x97, 0xc5, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x18, 0xa5, 0x80, 0xd8, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x6b, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x96, 0xec, 0xc2, 0xdf, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x41, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2b, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0xc3, 0xdd, 0xd4, 0xb8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x97, 0xa1, 0xaa, 0x69, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0e, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xe9, 0xfd, 0xb9, 0xea, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0xc5, 0xbe, 0xe4,
	0x6f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55,
	0x45, 0x44, 0x41, 0x53, 0x4e, 0x45, 0x57, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x07, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x6f, 0x77, 0x4b, 0x65, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x65, 0x54, 0x61, 0x67,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4a, 0x73, 0x6f,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4a, 0x73, 0x6f, 0x6e,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c,
	0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2d, 0x74, 0x65, 0x61,
	0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamcloud_v1_command_audit_entity_proto_rawDescOnce sync.Once
	file_teamcloud_v1_command_audit_entity_proto_rawDescData = file_teamcloud_v1_command_audit_entity_proto_rawDesc
)

func file_teamcloud_v1_command_audit_entity_proto_rawDescGZIP() []byte {
	file_teamcloud_v1_command_audit_entity_proto_rawDescOnce.Do(func() {
		file_teamcloud_v1_command_audit_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamcloud_v1_command_audit_entity_proto_rawDescData)
	})
	return file_teamcloud_v1_command_audit_entity_proto_rawDescData
}

var file_teamcloud_v1_command_audit_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teamcloud_v1_command_audit_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_teamcloud_v1_command_audit_entity_proto_goTypes = []interface{}{
	(CommandAuditEntity_RuntimeStatusEnum)(0), // 0: colbylwilliams.teamcloud.v1.CommandAuditEntity.RuntimeStatusEnum
	(*CommandAuditEntity)(nil),                // 1: colbylwilliams.teamcloud.v1.CommandAuditEntity
}
var file_teamcloud_v1_command_audit_entity_proto_depIdxs = []int32{
	0, // 0: colbylwilliams.teamcloud.v1.CommandAuditEntity.runtimeStatus:type_name -> colbylwilliams.teamcloud.v1.CommandAuditEntity.RuntimeStatusEnum
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_teamcloud_v1_command_audit_entity_proto_init() }
func file_teamcloud_v1_command_audit_entity_proto_init() {
	if File_teamcloud_v1_command_audit_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamcloud_v1_command_audit_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandAuditEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamcloud_v1_command_audit_entity_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamcloud_v1_command_audit_entity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamcloud_v1_command_audit_entity_proto_goTypes,
		DependencyIndexes: file_teamcloud_v1_command_audit_entity_proto_depIdxs,
		EnumInfos:         file_teamcloud_v1_command_audit_entity_proto_enumTypes,
		MessageInfos:      file_teamcloud_v1_command_audit_entity_proto_msgTypes,
	}.Build()
	File_teamcloud_v1_command_audit_entity_proto = out.File
	file_teamcloud_v1_command_audit_entity_proto_rawDesc = nil
	file_teamcloud_v1_command_audit_entity_proto_goTypes = nil
	file_teamcloud_v1_command_audit_entity_proto_depIdxs = nil
}
