//
//TeamCloud
//
//API for working with a TeamCloud instance.
//
//The version of the OpenAPI document: v1
//
//Contact: colbyw@microsoft.com
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: teamcloud/v1/repository_reference.proto

package teamcloudv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RepositoryReference_ProviderEnum int32

const (
	RepositoryReference_UNKNOWN RepositoryReference_ProviderEnum = 0
	RepositoryReference_GITHUB  RepositoryReference_ProviderEnum = 1
	RepositoryReference_DEVOPS  RepositoryReference_ProviderEnum = 2
)

// Enum value maps for RepositoryReference_ProviderEnum.
var (
	RepositoryReference_ProviderEnum_name = map[int32]string{
		0: "UNKNOWN",
		1: "GITHUB",
		2: "DEVOPS",
	}
	RepositoryReference_ProviderEnum_value = map[string]int32{
		"UNKNOWN": 0,
		"GITHUB":  1,
		"DEVOPS":  2,
	}
)

func (x RepositoryReference_ProviderEnum) Enum() *RepositoryReference_ProviderEnum {
	p := new(RepositoryReference_ProviderEnum)
	*p = x
	return p
}

func (x RepositoryReference_ProviderEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepositoryReference_ProviderEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_repository_reference_proto_enumTypes[0].Descriptor()
}

func (RepositoryReference_ProviderEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_repository_reference_proto_enumTypes[0]
}

func (x RepositoryReference_ProviderEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepositoryReference_ProviderEnum.Descriptor instead.
func (RepositoryReference_ProviderEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_repository_reference_proto_rawDescGZIP(), []int{0, 0}
}

type RepositoryReference_TypeEnum int32

const (
	RepositoryReference_UNDEFINED RepositoryReference_TypeEnum = 0
	RepositoryReference_TAG       RepositoryReference_TypeEnum = 1
	RepositoryReference_BRANCH    RepositoryReference_TypeEnum = 2
	RepositoryReference_HASH      RepositoryReference_TypeEnum = 3
)

// Enum value maps for RepositoryReference_TypeEnum.
var (
	RepositoryReference_TypeEnum_name = map[int32]string{
		0: "UNDEFINED",
		1: "TAG",
		2: "BRANCH",
		3: "HASH",
	}
	RepositoryReference_TypeEnum_value = map[string]int32{
		"UNDEFINED": 0,
		"TAG":       1,
		"BRANCH":    2,
		"HASH":      3,
	}
)

func (x RepositoryReference_TypeEnum) Enum() *RepositoryReference_TypeEnum {
	p := new(RepositoryReference_TypeEnum)
	*p = x
	return p
}

func (x RepositoryReference_TypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepositoryReference_TypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_repository_reference_proto_enumTypes[1].Descriptor()
}

func (RepositoryReference_TypeEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_repository_reference_proto_enumTypes[1]
}

func (x RepositoryReference_TypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepositoryReference_TypeEnum.Descriptor instead.
func (RepositoryReference_TypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_repository_reference_proto_rawDescGZIP(), []int{0, 1}
}

type RepositoryReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string                           `protobuf:"bytes,116079,opt,name=url,proto3" json:"url,omitempty"`
	Token        *string                          `protobuf:"bytes,110541305,opt,name=token,proto3,oneof" json:"token,omitempty"`
	Version      *string                          `protobuf:"bytes,351608024,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BaselUrl     *string                          `protobuf:"bytes,110191695,opt,name=baselUrl,proto3,oneof" json:"baselUrl,omitempty"`
	MountUrl     *string                          `protobuf:"bytes,123801962,opt,name=mountUrl,proto3,oneof" json:"mountUrl,omitempty"`
	Ref          *string                          `protobuf:"bytes,112787,opt,name=ref,proto3,oneof" json:"ref,omitempty"`
	Provider     RepositoryReference_ProviderEnum `protobuf:"varint,450624016,opt,name=provider,proto3,enum=colbylwilliams.teamcloud.v1.RepositoryReference_ProviderEnum" json:"provider,omitempty"`
	Type         RepositoryReference_TypeEnum     `protobuf:"varint,3575610,opt,name=type,proto3,enum=colbylwilliams.teamcloud.v1.RepositoryReference_TypeEnum" json:"type,omitempty"`
	Organization *string                          `protobuf:"bytes,105180469,opt,name=organization,proto3,oneof" json:"organization,omitempty"`
	Repository   *string                          `protobuf:"bytes,340187981,opt,name=repository,proto3,oneof" json:"repository,omitempty"`
	Project      *string                          `protobuf:"bytes,309310695,opt,name=project,proto3,oneof" json:"project,omitempty"`
}

func (x *RepositoryReference) Reset() {
	*x = RepositoryReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_repository_reference_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryReference) ProtoMessage() {}

func (x *RepositoryReference) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_repository_reference_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryReference.ProtoReflect.Descriptor instead.
func (*RepositoryReference) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_repository_reference_proto_rawDescGZIP(), []int{0}
}

func (x *RepositoryReference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RepositoryReference) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *RepositoryReference) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *RepositoryReference) GetBaselUrl() string {
	if x != nil && x.BaselUrl != nil {
		return *x.BaselUrl
	}
	return ""
}

func (x *RepositoryReference) GetMountUrl() string {
	if x != nil && x.MountUrl != nil {
		return *x.MountUrl
	}
	return ""
}

func (x *RepositoryReference) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *RepositoryReference) GetProvider() RepositoryReference_ProviderEnum {
	if x != nil {
		return x.Provider
	}
	return RepositoryReference_UNKNOWN
}

func (x *RepositoryReference) GetType() RepositoryReference_TypeEnum {
	if x != nil {
		return x.Type
	}
	return RepositoryReference_UNDEFINED
}

func (x *RepositoryReference) GetOrganization() string {
	if x != nil && x.Organization != nil {
		return *x.Organization
	}
	return ""
}

func (x *RepositoryReference) GetRepository() string {
	if x != nil && x.Repository != nil {
		return *x.Repository
	}
	return ""
}

func (x *RepositoryReference) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

var File_teamcloud_v1_repository_reference_proto protoreflect.FileDescriptor

var file_teamcloud_v1_repository_reference_proto_rawDesc = []byte{
	0x0a, 0x27, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6c, 0x62, 0x79,
	0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x22, 0xc7, 0x05, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0xef, 0x8a, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xf9, 0xf3, 0xda, 0x34,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xd8, 0xb9, 0xd4, 0xa7,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x18,
	0xcf, 0xc8, 0xc5, 0x34, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x6c, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x08, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x72, 0x6c, 0x18, 0xea, 0xa2, 0x84, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x93, 0xf1, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03, 0x72, 0x65,
	0x66, 0x88, 0x01, 0x01, 0x12, 0x5d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x90, 0xf4, 0xef, 0xd6, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6c,
	0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0xba, 0x9e, 0xda, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c,
	0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xb5, 0xda, 0x93, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0xcd, 0xb6, 0x9b, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0xe7, 0xe9, 0xbe, 0x93, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x22, 0x33, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x49,
	0x54, 0x48, 0x55, 0x42, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x56, 0x4f, 0x50, 0x53,
	0x10, 0x02, 0x22, 0x38, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x41, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x41, 0x53, 0x48, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x72, 0x65, 0x66, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6c,
	0x75, 0x74, 0x63, 0x68, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b,
	0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_teamcloud_v1_repository_reference_proto_rawDescOnce sync.Once
	file_teamcloud_v1_repository_reference_proto_rawDescData = file_teamcloud_v1_repository_reference_proto_rawDesc
)

func file_teamcloud_v1_repository_reference_proto_rawDescGZIP() []byte {
	file_teamcloud_v1_repository_reference_proto_rawDescOnce.Do(func() {
		file_teamcloud_v1_repository_reference_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamcloud_v1_repository_reference_proto_rawDescData)
	})
	return file_teamcloud_v1_repository_reference_proto_rawDescData
}

var file_teamcloud_v1_repository_reference_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_teamcloud_v1_repository_reference_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_teamcloud_v1_repository_reference_proto_goTypes = []interface{}{
	(RepositoryReference_ProviderEnum)(0), // 0: colbylwilliams.teamcloud.v1.RepositoryReference.ProviderEnum
	(RepositoryReference_TypeEnum)(0),     // 1: colbylwilliams.teamcloud.v1.RepositoryReference.TypeEnum
	(*RepositoryReference)(nil),           // 2: colbylwilliams.teamcloud.v1.RepositoryReference
}
var file_teamcloud_v1_repository_reference_proto_depIdxs = []int32{
	0, // 0: colbylwilliams.teamcloud.v1.RepositoryReference.provider:type_name -> colbylwilliams.teamcloud.v1.RepositoryReference.ProviderEnum
	1, // 1: colbylwilliams.teamcloud.v1.RepositoryReference.type:type_name -> colbylwilliams.teamcloud.v1.RepositoryReference.TypeEnum
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teamcloud_v1_repository_reference_proto_init() }
func file_teamcloud_v1_repository_reference_proto_init() {
	if File_teamcloud_v1_repository_reference_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamcloud_v1_repository_reference_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamcloud_v1_repository_reference_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamcloud_v1_repository_reference_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamcloud_v1_repository_reference_proto_goTypes,
		DependencyIndexes: file_teamcloud_v1_repository_reference_proto_depIdxs,
		EnumInfos:         file_teamcloud_v1_repository_reference_proto_enumTypes,
		MessageInfos:      file_teamcloud_v1_repository_reference_proto_msgTypes,
	}.Build()
	File_teamcloud_v1_repository_reference_proto = out.File
	file_teamcloud_v1_repository_reference_proto_rawDesc = nil
	file_teamcloud_v1_repository_reference_proto_goTypes = nil
	file_teamcloud_v1_repository_reference_proto_depIdxs = nil
}
