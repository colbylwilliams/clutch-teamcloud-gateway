//
//TeamCloud
//
//API for working with a TeamCloud instance.
//
//The version of the OpenAPI document: v1
//
//Contact: colbyw@microsoft.com
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: teamcloud/v1/component_task.proto

package teamcloudv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComponentTask_TypeEnum int32

const (
	ComponentTask_CUSTOM ComponentTask_TypeEnum = 0
	ComponentTask_CREATE ComponentTask_TypeEnum = 1
	ComponentTask_DELETE ComponentTask_TypeEnum = 2
)

// Enum value maps for ComponentTask_TypeEnum.
var (
	ComponentTask_TypeEnum_name = map[int32]string{
		0: "CUSTOM",
		1: "CREATE",
		2: "DELETE",
	}
	ComponentTask_TypeEnum_value = map[string]int32{
		"CUSTOM": 0,
		"CREATE": 1,
		"DELETE": 2,
	}
)

func (x ComponentTask_TypeEnum) Enum() *ComponentTask_TypeEnum {
	p := new(ComponentTask_TypeEnum)
	*p = x
	return p
}

func (x ComponentTask_TypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentTask_TypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_component_task_proto_enumTypes[0].Descriptor()
}

func (ComponentTask_TypeEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_component_task_proto_enumTypes[0]
}

func (x ComponentTask_TypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentTask_TypeEnum.Descriptor instead.
func (ComponentTask_TypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_component_task_proto_rawDescGZIP(), []int{0, 0}
}

type ComponentTask_TaskStateEnum int32

const (
	ComponentTask_PENDING      ComponentTask_TaskStateEnum = 0
	ComponentTask_INITIALIZING ComponentTask_TaskStateEnum = 1
	ComponentTask_PROCESSING   ComponentTask_TaskStateEnum = 2
	ComponentTask_SUCCEEDED    ComponentTask_TaskStateEnum = 3
	ComponentTask_CANCELED     ComponentTask_TaskStateEnum = 4
	ComponentTask_FAILED       ComponentTask_TaskStateEnum = 5
)

// Enum value maps for ComponentTask_TaskStateEnum.
var (
	ComponentTask_TaskStateEnum_name = map[int32]string{
		0: "PENDING",
		1: "INITIALIZING",
		2: "PROCESSING",
		3: "SUCCEEDED",
		4: "CANCELED",
		5: "FAILED",
	}
	ComponentTask_TaskStateEnum_value = map[string]int32{
		"PENDING":      0,
		"INITIALIZING": 1,
		"PROCESSING":   2,
		"SUCCEEDED":    3,
		"CANCELED":     4,
		"FAILED":       5,
	}
)

func (x ComponentTask_TaskStateEnum) Enum() *ComponentTask_TaskStateEnum {
	p := new(ComponentTask_TaskStateEnum)
	*p = x
	return p
}

func (x ComponentTask_TaskStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentTask_TaskStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_component_task_proto_enumTypes[1].Descriptor()
}

func (ComponentTask_TaskStateEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_component_task_proto_enumTypes[1]
}

func (x ComponentTask_TaskStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentTask_TaskStateEnum.Descriptor instead.
func (ComponentTask_TaskStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_component_task_proto_rawDescGZIP(), []int{0, 1}
}

type ComponentTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization     string                      `protobuf:"bytes,105180469,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationName string                      `protobuf:"bytes,218494373,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	ComponentId      string                      `protobuf:"bytes,449062153,opt,name=componentId,proto3" json:"componentId,omitempty"`
	ComponentName    string                      `protobuf:"bytes,95634731,opt,name=componentName,proto3" json:"componentName,omitempty"`
	ProjectId        string                      `protobuf:"bytes,357961197,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ProjectName      string                      `protobuf:"bytes,403176125,opt,name=projectName,proto3" json:"projectName,omitempty"`
	RequestedBy      *string                     `protobuf:"bytes,76840039,opt,name=requestedBy,proto3,oneof" json:"requestedBy,omitempty"`
	ScheduleId       *string                     `protobuf:"bytes,150187503,opt,name=scheduleId,proto3,oneof" json:"scheduleId,omitempty"`
	Type             ComponentTask_TypeEnum      `protobuf:"varint,3575610,opt,name=type,proto3,enum=colbylwilliams.teamcloud.v1.ComponentTask_TypeEnum" json:"type,omitempty"`
	TypeName         *string                     `protobuf:"bytes,139636508,opt,name=typeName,proto3,oneof" json:"typeName,omitempty"`
	Created          string                      `protobuf:"bytes,491683561,opt,name=created,proto3" json:"created,omitempty"`
	Started          *string                     `protobuf:"bytes,286572418,opt,name=started,proto3,oneof" json:"started,omitempty"`
	Finished         *string                     `protobuf:"bytes,136789903,opt,name=finished,proto3,oneof" json:"finished,omitempty"`
	InputJson        *string                     `protobuf:"bytes,96060373,opt,name=inputJson,proto3,oneof" json:"inputJson,omitempty"`
	Output           *string                     `protobuf:"bytes,468641536,opt,name=output,proto3,oneof" json:"output,omitempty"`
	ResourceId       *string                     `protobuf:"bytes,271908409,opt,name=resourceId,proto3,oneof" json:"resourceId,omitempty"`
	TaskState        ComponentTask_TaskStateEnum `protobuf:"varint,169822732,opt,name=taskState,proto3,enum=colbylwilliams.teamcloud.v1.ComponentTask_TaskStateEnum" json:"taskState,omitempty"`
	ExitCode         *int32                      `protobuf:"varint,512615384,opt,name=exitCode,proto3,oneof" json:"exitCode,omitempty"`
	Id               string                      `protobuf:"bytes,3355,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ComponentTask) Reset() {
	*x = ComponentTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_component_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentTask) ProtoMessage() {}

func (x *ComponentTask) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_component_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentTask.ProtoReflect.Descriptor instead.
func (*ComponentTask) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_component_task_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentTask) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *ComponentTask) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *ComponentTask) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ComponentTask) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *ComponentTask) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ComponentTask) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ComponentTask) GetRequestedBy() string {
	if x != nil && x.RequestedBy != nil {
		return *x.RequestedBy
	}
	return ""
}

func (x *ComponentTask) GetScheduleId() string {
	if x != nil && x.ScheduleId != nil {
		return *x.ScheduleId
	}
	return ""
}

func (x *ComponentTask) GetType() ComponentTask_TypeEnum {
	if x != nil {
		return x.Type
	}
	return ComponentTask_CUSTOM
}

func (x *ComponentTask) GetTypeName() string {
	if x != nil && x.TypeName != nil {
		return *x.TypeName
	}
	return ""
}

func (x *ComponentTask) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ComponentTask) GetStarted() string {
	if x != nil && x.Started != nil {
		return *x.Started
	}
	return ""
}

func (x *ComponentTask) GetFinished() string {
	if x != nil && x.Finished != nil {
		return *x.Finished
	}
	return ""
}

func (x *ComponentTask) GetInputJson() string {
	if x != nil && x.InputJson != nil {
		return *x.InputJson
	}
	return ""
}

func (x *ComponentTask) GetOutput() string {
	if x != nil && x.Output != nil {
		return *x.Output
	}
	return ""
}

func (x *ComponentTask) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ComponentTask) GetTaskState() ComponentTask_TaskStateEnum {
	if x != nil {
		return x.TaskState
	}
	return ComponentTask_PENDING
}

func (x *ComponentTask) GetExitCode() int32 {
	if x != nil && x.ExitCode != nil {
		return *x.ExitCode
	}
	return 0
}

func (x *ComponentTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_teamcloud_v1_component_task_proto protoreflect.FileDescriptor

var file_teamcloud_v1_component_task_proto_rawDesc = []byte{
	0x0a, 0x21, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69,
	0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x22, 0xb7, 0x08, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x25, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0xb5, 0xda, 0x93, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x10, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xa5, 0xeb,
	0x97, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x89, 0xca, 0x90, 0xd6, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0xab, 0x8a, 0xcd, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0xed, 0x9b, 0xd8, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xbd, 0xf5, 0x9f, 0xc0, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0xe7,
	0xf8, 0xd1, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0xef, 0xdb, 0xce, 0x47, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x4a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0xba, 0x9e, 0xda, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69,
	0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x9c, 0xde, 0xca, 0x42, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0xe9, 0xfd, 0xb9,
	0xea, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x82, 0xff, 0xd2, 0x88, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x8f,
	0xff, 0x9c, 0x41, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4a,
	0x73, 0x6f, 0x6e, 0x18, 0xd5, 0x87, 0xe7, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x80, 0xce, 0xbb, 0xdf, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0xb9, 0xfc, 0xd3, 0x81,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x8c, 0x94, 0xfd, 0x50, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63,
	0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x23, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0xd8, 0xc7,
	0xb7, 0xf4, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x9b, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x22, 0x67, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c,
	0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45,
	0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4a,
	0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x59, 0x5a, 0x57, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77,
	0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2d, 0x74,
	0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamcloud_v1_component_task_proto_rawDescOnce sync.Once
	file_teamcloud_v1_component_task_proto_rawDescData = file_teamcloud_v1_component_task_proto_rawDesc
)

func file_teamcloud_v1_component_task_proto_rawDescGZIP() []byte {
	file_teamcloud_v1_component_task_proto_rawDescOnce.Do(func() {
		file_teamcloud_v1_component_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamcloud_v1_component_task_proto_rawDescData)
	})
	return file_teamcloud_v1_component_task_proto_rawDescData
}

var file_teamcloud_v1_component_task_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_teamcloud_v1_component_task_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_teamcloud_v1_component_task_proto_goTypes = []interface{}{
	(ComponentTask_TypeEnum)(0),      // 0: colbylwilliams.teamcloud.v1.ComponentTask.TypeEnum
	(ComponentTask_TaskStateEnum)(0), // 1: colbylwilliams.teamcloud.v1.ComponentTask.TaskStateEnum
	(*ComponentTask)(nil),            // 2: colbylwilliams.teamcloud.v1.ComponentTask
}
var file_teamcloud_v1_component_task_proto_depIdxs = []int32{
	0, // 0: colbylwilliams.teamcloud.v1.ComponentTask.type:type_name -> colbylwilliams.teamcloud.v1.ComponentTask.TypeEnum
	1, // 1: colbylwilliams.teamcloud.v1.ComponentTask.taskState:type_name -> colbylwilliams.teamcloud.v1.ComponentTask.TaskStateEnum
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teamcloud_v1_component_task_proto_init() }
func file_teamcloud_v1_component_task_proto_init() {
	if File_teamcloud_v1_component_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamcloud_v1_component_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamcloud_v1_component_task_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamcloud_v1_component_task_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamcloud_v1_component_task_proto_goTypes,
		DependencyIndexes: file_teamcloud_v1_component_task_proto_depIdxs,
		EnumInfos:         file_teamcloud_v1_component_task_proto_enumTypes,
		MessageInfos:      file_teamcloud_v1_component_task_proto_msgTypes,
	}.Build()
	File_teamcloud_v1_component_task_proto = out.File
	file_teamcloud_v1_component_task_proto_rawDesc = nil
	file_teamcloud_v1_component_task_proto_goTypes = nil
	file_teamcloud_v1_component_task_proto_depIdxs = nil
}
