//
//TeamCloud
//
//API for working with a TeamCloud instance.
//
//The version of the OpenAPI document: v1
//
//Contact: colbyw@microsoft.com
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: teamcloud/v1/organization.proto

package teamcloudv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Organization_ResourceStateEnum int32

const (
	Organization_PENDING        Organization_ResourceStateEnum = 0
	Organization_INITIALIZING   Organization_ResourceStateEnum = 1
	Organization_PROVISIONING   Organization_ResourceStateEnum = 2
	Organization_PROVISIONED    Organization_ResourceStateEnum = 3
	Organization_DEPROVISIONING Organization_ResourceStateEnum = 4
	Organization_DEPROVISIONED  Organization_ResourceStateEnum = 5
	Organization_FAILED         Organization_ResourceStateEnum = 6
)

// Enum value maps for Organization_ResourceStateEnum.
var (
	Organization_ResourceStateEnum_name = map[int32]string{
		0: "PENDING",
		1: "INITIALIZING",
		2: "PROVISIONING",
		3: "PROVISIONED",
		4: "DEPROVISIONING",
		5: "DEPROVISIONED",
		6: "FAILED",
	}
	Organization_ResourceStateEnum_value = map[string]int32{
		"PENDING":        0,
		"INITIALIZING":   1,
		"PROVISIONING":   2,
		"PROVISIONED":    3,
		"DEPROVISIONING": 4,
		"DEPROVISIONED":  5,
		"FAILED":         6,
	}
)

func (x Organization_ResourceStateEnum) Enum() *Organization_ResourceStateEnum {
	p := new(Organization_ResourceStateEnum)
	*p = x
	return p
}

func (x Organization_ResourceStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Organization_ResourceStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_teamcloud_v1_organization_proto_enumTypes[0].Descriptor()
}

func (Organization_ResourceStateEnum) Type() protoreflect.EnumType {
	return &file_teamcloud_v1_organization_proto_enumTypes[0]
}

func (x Organization_ResourceStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Organization_ResourceStateEnum.Descriptor instead.
func (Organization_ResourceStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_teamcloud_v1_organization_proto_rawDescGZIP(), []int{0, 0}
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant         string                         `protobuf:"bytes,340465495,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Slug           string                         `protobuf:"bytes,3533483,opt,name=slug,proto3" json:"slug,omitempty"`
	DisplayName    string                         `protobuf:"bytes,103536240,opt,name=displayName,proto3" json:"displayName,omitempty"`
	SubscriptionId string                         `protobuf:"bytes,405049114,opt,name=subscriptionId,proto3" json:"subscriptionId,omitempty"`
	Location       string                         `protobuf:"bytes,290430904,opt,name=location,proto3" json:"location,omitempty"`
	Tags           map[string]string              `protobuf:"bytes,3552281,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResourceId     *string                        `protobuf:"bytes,271908409,opt,name=resourceId,proto3,oneof" json:"resourceId,omitempty"`
	ResourceState  Organization_ResourceStateEnum `protobuf:"varint,431647012,opt,name=resourceState,proto3,enum=colbylwilliams.teamcloud.v1.Organization_ResourceStateEnum" json:"resourceState,omitempty"`
	SecretsVaultId *string                        `protobuf:"bytes,477997657,opt,name=secretsVaultId,proto3,oneof" json:"secretsVaultId,omitempty"`
	GalleryId      *string                        `protobuf:"bytes,319550477,opt,name=galleryId,proto3,oneof" json:"galleryId,omitempty"`
	RegistryId     *string                        `protobuf:"bytes,258925003,opt,name=registryId,proto3,oneof" json:"registryId,omitempty"`
	StorageId      *string                        `protobuf:"bytes,78223609,opt,name=storageId,proto3,oneof" json:"storageId,omitempty"`
	Id             string                         `protobuf:"bytes,3355,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_organization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_organization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_organization_proto_rawDescGZIP(), []int{0}
}

func (x *Organization) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Organization) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Organization) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Organization) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *Organization) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Organization) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Organization) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *Organization) GetResourceState() Organization_ResourceStateEnum {
	if x != nil {
		return x.ResourceState
	}
	return Organization_PENDING
}

func (x *Organization) GetSecretsVaultId() string {
	if x != nil && x.SecretsVaultId != nil {
		return *x.SecretsVaultId
	}
	return ""
}

func (x *Organization) GetGalleryId() string {
	if x != nil && x.GalleryId != nil {
		return *x.GalleryId
	}
	return ""
}

func (x *Organization) GetRegistryId() string {
	if x != nil && x.RegistryId != nil {
		return *x.RegistryId
	}
	return ""
}

func (x *Organization) GetStorageId() string {
	if x != nil && x.StorageId != nil {
		return *x.StorageId
	}
	return ""
}

func (x *Organization) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_teamcloud_v1_organization_proto protoreflect.FileDescriptor

var file_teamcloud_v1_organization_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d,
	0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x22, 0xd6,
	0x06, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0xd7, 0xae, 0xac, 0xa2, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0xab, 0xd5, 0xd7, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x23, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0xf0, 0xac, 0xaf, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x9a, 0x9e, 0x92, 0xc1, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xb8, 0xbf, 0xbe, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x99, 0xe8, 0xd8, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c,
	0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x27, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0xb9, 0xfc,
	0xd3, 0x81, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x65, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xa4, 0xd2, 0xe9, 0xcd, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c,
	0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2f, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x49,
	0x64, 0x18, 0xd9, 0xd4, 0xf6, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x64, 0x18, 0x8d, 0xe8,
	0xaf, 0x98, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0xcb, 0xc3, 0xbb, 0x7b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0xf9, 0xb1, 0xa6,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x0f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x9b, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x88, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53,
	0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x44,
	0x45, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x59, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c,
	0x69, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2d, 0x74, 0x65, 0x61, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamcloud_v1_organization_proto_rawDescOnce sync.Once
	file_teamcloud_v1_organization_proto_rawDescData = file_teamcloud_v1_organization_proto_rawDesc
)

func file_teamcloud_v1_organization_proto_rawDescGZIP() []byte {
	file_teamcloud_v1_organization_proto_rawDescOnce.Do(func() {
		file_teamcloud_v1_organization_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamcloud_v1_organization_proto_rawDescData)
	})
	return file_teamcloud_v1_organization_proto_rawDescData
}

var file_teamcloud_v1_organization_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teamcloud_v1_organization_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_teamcloud_v1_organization_proto_goTypes = []interface{}{
	(Organization_ResourceStateEnum)(0), // 0: colbylwilliams.teamcloud.v1.Organization.ResourceStateEnum
	(*Organization)(nil),                // 1: colbylwilliams.teamcloud.v1.Organization
	nil,                                 // 2: colbylwilliams.teamcloud.v1.Organization.TagsEntry
}
var file_teamcloud_v1_organization_proto_depIdxs = []int32{
	2, // 0: colbylwilliams.teamcloud.v1.Organization.tags:type_name -> colbylwilliams.teamcloud.v1.Organization.TagsEntry
	0, // 1: colbylwilliams.teamcloud.v1.Organization.resourceState:type_name -> colbylwilliams.teamcloud.v1.Organization.ResourceStateEnum
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teamcloud_v1_organization_proto_init() }
func file_teamcloud_v1_organization_proto_init() {
	if File_teamcloud_v1_organization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teamcloud_v1_organization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teamcloud_v1_organization_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamcloud_v1_organization_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teamcloud_v1_organization_proto_goTypes,
		DependencyIndexes: file_teamcloud_v1_organization_proto_depIdxs,
		EnumInfos:         file_teamcloud_v1_organization_proto_enumTypes,
		MessageInfos:      file_teamcloud_v1_organization_proto_msgTypes,
	}.Build()
	File_teamcloud_v1_organization_proto = out.File
	file_teamcloud_v1_organization_proto_rawDesc = nil
	file_teamcloud_v1_organization_proto_goTypes = nil
	file_teamcloud_v1_organization_proto_depIdxs = nil
}
