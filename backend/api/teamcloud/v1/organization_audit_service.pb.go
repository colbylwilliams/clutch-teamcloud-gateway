//
//TeamCloud
//
//API for working with a TeamCloud instance.
//
//The version of the OpenAPI document: v1
//
//Contact: colbyw@microsoft.com
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: teamcloud/v1/organization_audit_service.proto

package teamcloudv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAuditCommandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
}

func (x *GetAuditCommandsRequest) Reset() {
	*x = GetAuditCommandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_organization_audit_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuditCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditCommandsRequest) ProtoMessage() {}

func (x *GetAuditCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_organization_audit_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditCommandsRequest.ProtoReflect.Descriptor instead.
func (*GetAuditCommandsRequest) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_organization_audit_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAuditCommandsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetAuditEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string   `protobuf:"bytes,1,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
	TimeRange      string   `protobuf:"bytes,2,opt,name=timeRange,proto3" json:"timeRange,omitempty"`
	Commands       []string `protobuf:"bytes,3,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *GetAuditEntriesRequest) Reset() {
	*x = GetAuditEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_organization_audit_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuditEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditEntriesRequest) ProtoMessage() {}

func (x *GetAuditEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_organization_audit_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetAuditEntriesRequest) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_organization_audit_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAuditEntriesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetAuditEntriesRequest) GetTimeRange() string {
	if x != nil {
		return x.TimeRange
	}
	return ""
}

func (x *GetAuditEntriesRequest) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

type GetAuditEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId      string `protobuf:"bytes,1,opt,name=commandId,proto3" json:"commandId,omitempty"`
	OrganizationId string `protobuf:"bytes,2,opt,name=organizationId,proto3" json:"organizationId,omitempty"`
	Expand         bool   `protobuf:"varint,3,opt,name=expand,proto3" json:"expand,omitempty"`
}

func (x *GetAuditEntryRequest) Reset() {
	*x = GetAuditEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teamcloud_v1_organization_audit_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuditEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditEntryRequest) ProtoMessage() {}

func (x *GetAuditEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teamcloud_v1_organization_audit_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditEntryRequest.ProtoReflect.Descriptor instead.
func (*GetAuditEntryRequest) Descriptor() ([]byte, []int) {
	return file_teamcloud_v1_organization_audit_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAuditEntryRequest) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *GetAuditEntryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetAuditEntryRequest) GetExpand() bool {
	if x != nil {
		return x.Expand
	}
	return false
}

var File_teamcloud_v1_organization_audit_service_proto protoreflect.FileDescriptor

var file_teamcloud_v1_organization_audit_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1b, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x33, 0x74, 0x65,
	0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x38, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x74, 0x65, 0x61,
	0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x74, 0x65,
	0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x32, 0x9a, 0x03,
	0x0a, 0x14, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x41, 0x50, 0x49, 0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6c,
	0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d,
	0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c,
	0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63,
	0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x7d, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x63,
	0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77, 0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x59, 0x5a, 0x57, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6c, 0x62, 0x79, 0x6c, 0x77,
	0x69, 0x6c, 0x6c, 0x69, 0x61, 0x6d, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2d, 0x74,
	0x65, 0x61, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x76, 0x31, 0x50, 0x00, 0x50, 0x01, 0x50, 0x02, 0x50, 0x03, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teamcloud_v1_organization_audit_service_proto_rawDescOnce sync.Once
	file_teamcloud_v1_organization_audit_service_proto_rawDescData = file_teamcloud_v1_organization_audit_service_proto_rawDesc
)

func file_teamcloud_v1_organization_audit_service_proto_rawDescGZIP() []byte {
	file_teamcloud_v1_organization_audit_service_proto_rawDescOnce.Do(func() {
		file_teamcloud_v1_organization_audit_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_teamcloud_v1_organization_audit_service_proto_rawDescData)
	})
	return file_teamcloud_v1_organization_audit_service_proto_rawDescData
}

var file_teamcloud_v1_organization_audit_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_teamcloud_v1_organization_audit_service_proto_goTypes = []interface{}{
	(*GetAuditCommandsRequest)(nil),          // 0: colbylwilliams.teamcloud.v1.GetAuditCommandsRequest
	(*GetAuditEntriesRequest)(nil),           // 1: colbylwilliams.teamcloud.v1.GetAuditEntriesRequest
	(*GetAuditEntryRequest)(nil),             // 2: colbylwilliams.teamcloud.v1.GetAuditEntryRequest
	(*StringListDataResult)(nil),             // 3: colbylwilliams.teamcloud.v1.StringListDataResult
	(*CommandAuditEntityListDataResult)(nil), // 4: colbylwilliams.teamcloud.v1.CommandAuditEntityListDataResult
	(*CommandAuditEntityDataResult)(nil),     // 5: colbylwilliams.teamcloud.v1.CommandAuditEntityDataResult
}
var file_teamcloud_v1_organization_audit_service_proto_depIdxs = []int32{
	0, // 0: colbylwilliams.teamcloud.v1.OrganizationAuditAPI.GetAuditCommands:input_type -> colbylwilliams.teamcloud.v1.GetAuditCommandsRequest
	1, // 1: colbylwilliams.teamcloud.v1.OrganizationAuditAPI.GetAuditEntries:input_type -> colbylwilliams.teamcloud.v1.GetAuditEntriesRequest
	2, // 2: colbylwilliams.teamcloud.v1.OrganizationAuditAPI.GetAuditEntry:input_type -> colbylwilliams.teamcloud.v1.GetAuditEntryRequest
	3, // 3: colbylwilliams.teamcloud.v1.OrganizationAuditAPI.GetAuditCommands:output_type -> colbylwilliams.teamcloud.v1.StringListDataResult
	4, // 4: colbylwilliams.teamcloud.v1.OrganizationAuditAPI.GetAuditEntries:output_type -> colbylwilliams.teamcloud.v1.CommandAuditEntityListDataResult
	5, // 5: colbylwilliams.teamcloud.v1.OrganizationAuditAPI.GetAuditEntry:output_type -> colbylwilliams.teamcloud.v1.CommandAuditEntityDataResult
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_teamcloud_v1_organization_audit_service_proto_init() }
func file_teamcloud_v1_organization_audit_service_proto_init() {
	if File_teamcloud_v1_organization_audit_service_proto != nil {
		return
	}
	file_teamcloud_v1_command_audit_entity_data_result_proto_init()
	file_teamcloud_v1_command_audit_entity_list_data_result_proto_init()
	file_teamcloud_v1_error_result_proto_init()
	file_teamcloud_v1_string_list_data_result_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_teamcloud_v1_organization_audit_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuditCommandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamcloud_v1_organization_audit_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuditEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teamcloud_v1_organization_audit_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuditEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teamcloud_v1_organization_audit_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teamcloud_v1_organization_audit_service_proto_goTypes,
		DependencyIndexes: file_teamcloud_v1_organization_audit_service_proto_depIdxs,
		MessageInfos:      file_teamcloud_v1_organization_audit_service_proto_msgTypes,
	}.Build()
	File_teamcloud_v1_organization_audit_service_proto = out.File
	file_teamcloud_v1_organization_audit_service_proto_rawDesc = nil
	file_teamcloud_v1_organization_audit_service_proto_goTypes = nil
	file_teamcloud_v1_organization_audit_service_proto_depIdxs = nil
}
